{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red70\green137\blue204;
\red23\green23\blue23;\red202\green202\blue202;\red212\green214\blue154;\red140\green211\blue254;\red67\green192\blue160;
\red194\green126\blue101;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c33725\c61176\c83922;
\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;\cssrgb\c86275\c86275\c66667;\cssrgb\c61176\c86275\c99608;\cssrgb\c30588\c78824\c69020;
\cssrgb\c80784\c56863\c47059;}
\margl1440\margr1440\vieww21940\viewh14320\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
DSCI 510 - Homework 4 \
Kelly Choy \
\
*Notes:\
- I have already done the merging of the columns from 1 dataset to another. I have listed which ones are the new columns from each dataset (to avoid any confusion). I thought merging them in the code for homework4 would be helpful when I do my analysis for the project. \
-I also did include an extra csv (netflix_close_prices.csv) if you are interested in looking at the stock prices values before my merge.\
\
Dataset #1: Web Scraping: Netflix Original Programming\

\f1\b0 The first dataset requires web scraping technique to gather all the Netflix shows presented on the wiki page. The column we are interested in are Title, Genre, and Premiere Date. We use web scraping program to take in all the shows and will print out to a csv file as an output. The code is written where if sample_p == True, the program will get the first 5 Netflix films. If sample_p == False, the program will collect all shows present on the page. The output of this program is a csv file.\
\
To run this program, you just need to run the code in Jupyter notebooks (provided) \
Function: \cf4 \cb5 def\cf6  \cf7 download_dataset1\cf6 (\cf8 out_file1\cf6 : \cf9 str\cf6 , \cf8 sample_p\cf6 : \cf9 bool\cf6 ):\cb1 \
\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 To Call the function:
\f1\b0 \
\pard\pardeftab720\partightenfactor0
\cf7 \cb5 download_dataset1\cf6 (\cf10 'dataset1.csv'\cf6 , \cf4 True\cf6 )\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 You can name the file however you\'92d like, in this example I named it \'91dataset1.csv\'92.\cf6 \cb1 \
\cf2 \cb3 \
The output should get only 5 Netflix shows because sample_p = True (example output below):\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f2 \cf0 \cb1 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Screen Shot 2023-04-20 at 10.29.13 PM.png \width8420 \height2840 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \
Dataset #2: OMDB API \

\f1\b0 The second dataset builds onto the first dataset. We already gather the movie titles from the first dataset and it is necessary to get the movie information from the OMDB API. From OMBD API, we are interested in Language, Country, IMDB Rating and IMDB Votes. In our example, the output from the first dataset is called\'92 dataset1.csv\'92. This is used as an input for the second dataset. \
\
How this API works: \
1) Go to \'97> https://www.omdbapi.com/\
2) Need to request API Key \'97> Top header has \'93API Key\'94, follow the steps to receive a unique API KEY to use for this program. \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f2 \cf0 \cb1 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Screen Shot 2023-04-20 at 11.38.31 PM.png \width13320 \height7540 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf2 \
*NOTE: The API KEY has a limit of 1,000 so if you are trying to gather more than 1,000 request, you may need to request for 2 different API KEYs (using different email address) or pay ($$) to get a larger limit daily. So for 2 API Keys, my max would be 2,000 records. If your dataset has more than this, you may need to request for additional API Keys and add another argument to the function for a third key as so forth. In my code, I have a dataset from 1,000-2,000 so I just need 2 API Keys; My two API keys are \cf10 \cb5 '24bea5c3'\cf6 ,\cf10 'b17bad04'\cf6 \cb1 \
\cf2 \cb3 \
\
To run this program, run the code in Jupyter notebook (provided. The output file of this part is \'91dataset2.csv\'92. This CSV file will include columns from the first dataset and add the 4 new columns generated from the OMDB API. You need to put the name of the CSV file that was created in the first dataset (string format). Identify sample_p (in this test situation we selected True), and include the API keys you received from OMDB. If your dataset is less than 1,000 records, you can put key2 as the same value as key1. I have 2 API keys so I\'92ll put one for key1 and the other as key2. If the dataset is 1,000+ records, the program will split the dataset into 2 so it will not max out the limit of the API key. \
\
In my code, I have created a function get_API() which will loop through the Netflix show titles(from the input file) and gather the necessary information from the OMDB API. These values are stored in a list that will be used in download_dataset2(). In download_dataset2(), if sample_p == True, the code will only get the first 5 rows of the file then get the OMDB information from get_API(). After getting the new information from get_API, the program will create a new CSV file with the new columns (out_file2). If sample_p == False (original dataset should have 1,000+ records), the program will use all rows of dataset1.csv and get the OMDB information from get_API(). \
\
\
Function: \cf4 \cb5 def\cf6  \cf7 download_dataset2\cf6 (\cf8 in_file1\cf6 : \cf9 str\cf6 , \cf8 out_file2\cf6 : \cf9 str\cf6 , \cf8 sample_p\cf6 : \cf9 bool\cf6 , \cf8 key1\cf6 :\cf9 str\cf6 , \cf8 key2\cf6 :\cf9 str\cf6 ):\cb1 \
\cf2 \cb3 \

\f0\b To Call the function:\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf7 \cb5 download_dataset2\cf6 (\cf10 'dataset1.csv'\cf6 ,\cf10 'dataset2.csv'\cf6 ,\cf4 True\cf6 ,\cf10 'b17bad04'\cf6 ,\cf10 '24bea5c3'\cf6 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \
The output gets only 5 Netflix shows because sample_p = True (example output below):\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f2 \cf0 \cb1 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Screen Shot 2023-04-20 at 11.36.43 PM.png \width19920 \height3020 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f0\b \cf2 \cb3 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\partightenfactor0
\cf2 \
\
Dataset #3: Yahoo Finance API\

\f1\b0 The third dataset is to get the close price of Netflix from a specific time period. First, we need to identify what is the minimum date and maximum date of the \ul whole dataset\ulnone . I have provided a code in Jupyter Notebook for you to see. In the dataset, the maximum date: \cb1 2023-04-14 and the minimum date: 2012-02-06. These dates will be used in our code to get the Netflix stock prices. \
\
Using pandas and yfinance, we will be able to get the \'93close price\'94 of Netflix. These values are stored in a data frame called stock_df. The input file (opened in a data frame as movie_df) has a column called \'91Premiere Date\'92, whereas the stock values have a column called \'91date\'92. In order to merge them we need to join them on the same dates in the same format. After merging, each date has a corresponding Netflix title and the close price for that date if present. We will be dropping the 2nd \'91date\'92 column since it is redundant in the file. \
\
Function: \cf4 \cb5 def\cf6  \cf7 download_dataset3\cf6 (\cf8 in_file2\cf6 : \cf9 str\cf6 , \cf8 out_file3\cf6 :\cf9 str\cf6 , \cf8 sample_p\cf6 : \cf9 bool\cf6 ):\cb1 \

\f0\b \cf2 \cb3 To Call the function:\
\pard\pardeftab720\partightenfactor0

\f1\b0 \cf7 \cb5 download_dataset3\cf6 (\cf10 'dataset2.csv'\cf6 , \cf10 'dataset3.csv'\cf6 , \cf4 True\cf6 )\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 The output has 5 rows because sample_p = True (example output below):\cf6 \cb1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0

\f2 \cf0 \kerning1\expnd0\expndtw0 {{\NeXTGraphic Screen Shot 2023-04-21 at 12.10.16 AM.png \width20940 \height2800 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \expnd0\expndtw0\kerning0
You can see the new column(\'91close price\'92) from finance added
\f2 \cf0 \kerning1\expnd0\expndtw0 \
\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 From the first dataset there was 3 columns, then in the second dataset we added 4 more columns to the original, and from the third dataset we will add 1 more to complete it. In total there are 8 columns in the final output file. }